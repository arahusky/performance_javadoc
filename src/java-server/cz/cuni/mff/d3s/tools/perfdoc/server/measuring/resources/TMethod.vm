public class TMethod {

    #if ($mFunctionIsStatic)
        //just to be sure, that class is loaded into JVM
        private Class<?> fClass = $mClass .class;
    #else
        private $mClass fInstance;

        public TMethod($mClass instance) {
            this.fInstance = instance;
        }
    #end

    public void newInstance() throws Throwable {
        #if ($mFunctionIsStatic)
        //make sure that class is loaded to JVM
        this.fClass = $mClass .class;
        #else
        this.fInstance = new $mClass(
        #if ($mConstructorString)
            "$mConstructorString"
        #end
            );
        #end
    }

    public void call(Object[] arguments) throws Throwable{
        #if ($mFunctionIsStatic)
        $mClass
        #else
        this.fInstance
        #end

        . $mFunction.getName() (

        #foreach ($param in $mFunction.getParameterTypes())
                #if ($foreach.index > 0)
                            ,
                #end
                ($param.getCanonicalName()) arguments[$foreach.index]
            #end
        );
    }
}